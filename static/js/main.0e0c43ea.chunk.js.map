{"version":3,"sources":["Components/NavBar.js","Components/Home.js","Components/About.js","Components/Projects.js","Components/Clubs.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Home","About","Project","Clubs","App","basename","process","exact","path","component","Projects","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAEe,SAASA,IACtB,OACE,8BACE,+CCLS,SAASC,IACtB,OAAO,sCCDM,SAASC,IACtB,OAAO,uCCDM,SAASC,IACtB,OAAO,0CCDM,SAASC,IACtB,OAAO,uCCmDMC,MA1Cf,WACE,OACE,cAAC,IAAD,CAAeC,SAAUC,aAAzB,SACE,gCACE,cAACP,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,SAASC,UAAWR,MAExC,cAAC,IAAD,UACE,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,YAAYC,UAAWC,MAE3C,cAAC,IAAD,UACE,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UAAWN,MAExC,cAAC,IAAD,UACE,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,UAAWT,YCb5BW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0e0c43ea.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function NavBar() {\n  return (\n    <div>\n      <h1>Navbar Test</h1>\n    </div>\n  );\n}\n","export default function Home() {\n  return <h1>Home</h1>;\n}\n","export default function About() {\n  return <h1>About</h1>;\n}\n","export default function Project() {\n  return <h1>Projects</h1>;\n}\n","export default function Clubs() {\n  return <h1>Clubs</h1>;\n}\n","import \"@fontsource/roboto\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport NavBar from \"./Components/NavBar\";\nimport Home from \"./Components/Home\";\nimport About from \"./Components/About\";\nimport Projects from \"./Components/Projects\";\nimport Clubs from \"./Components/Clubs\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/About\" component={About} />\n        </Switch>\n        <Switch>\n          <Route exact path=\"/Projects\" component={Projects} />\n        </Switch>\n        <Switch>\n          <Route exact path=\"/Clubs\" component={Clubs} />\n        </Switch>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </div>\n      {/* <Switch>\n        <Route exact path=\"/\">\n          <h1>Routing Test</h1>\n        </Route>\n        <Route exact path=\"/About\">\n          <h1>Routing Test 1</h1>\n        </Route>\n        <Route exact path=\"/Projects\">\n          <h1>Routing Test 2</h1>\n        </Route>\n        <Route exact path=\"/Experience\">\n          <h1>Routing Test 3</h1>\n        </Route>\n        <Route exact path=\"/Clubs\">\n          <h1>Routing Test 4</h1>\n        </Route>\n        <Route exact path=\"/Blogs\">\n          <h1>Routing Test 5</h1>\n        </Route>\n      </Switch> */}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}